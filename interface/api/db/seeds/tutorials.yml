-
  tutorial:
    title: Building a Button Blinker
    source: https://learn.adafruit.com/adafruit-arduino-lesson-2-leds/blinking-the-led
    image: https://cdn-learn.adafruit.com/assets/assets/000/002/158/original/learn_arduino_overview.jpg?1396780031
    description: In this lesson, you will learn how to change the brightness of an LED by using different values of resistor.
  progress:
    code: '// Edit me'
  steps:
    -
      title: Introduction
      image: https://cdn-learn.adafruit.com/assets/assets/000/002/158/medium640/learn_arduino_overview.jpg?1396780031
      description: In this lesson, you will learn how to change the brightness of an LED by using different values of resistor.
    -
      title: Collecting Parts
      image: https://cdn-learn.adafruit.com/assets/assets/000/002/165/medium800/learn_arduino_uno_r3_web.jpg?1396780086
      description: |
        To carry out the experiment described in this lesson, you will need the following parts.
        Part, Qty:
        - 5mm Red LED 1,
        - 270 Ω Resistor (red, purple, brown stripes) 1,
        - 470 Ω Resistor (yellow, purple, brown stripes) 1,
        - 2.2 kΩ Resistor (red, red, red stripes) 1,
        - 10 kΩ Resistor (brown, black, orange stripes) 1,
        - Half-size Breadboard 1,
        - Arduino Uno R3 1,
        - Jumper wire pack 1,
    -
      title: Intro to LEDs
      image: https://cdn-learn.adafruit.com/assets/assets/000/002/167/medium640/learn_arduino_led_labelled.jpg?1396780101
      description: |
        LEDs make great indicator lights. They use very little electricity and
        they pretty much last forever.

        In this lession you will use perhaps the most common of all LEDs a 5mm
        red LED. 5Mm refers to the diameter of the LED and as well as 5mm,
        other common sizes are 3mm and the large fun 10mm LEDs.

        You cannot directly connect an LED to a battery or voltage source.
        Firstly, because the LED has a positive and a negative lead and will
        not light if they are the wrong way around and secondly, an LED must be
        used with a resistor to limit or 'choke' the amount of current flowing
        through the LED - otherwise the LED could burn out!

        If you do not use a resistor with an LED, then it may well be destroyed
        almost immediately, as too much current will flow through the LED,
        heating it and destroying the 'junction' where the light is produced.

        There are two ways to tell which is the positive lead of the LED and
        which the negative. Firstly, the positive lead is longer. Secondly,
        where the negative lead enters the body of the LED, there is a flat
        edge to the case of the LED. If you happen to have an LED that has a
        flat side next to the longer lead, you should assume that the longer
        lead is positive.
      tests:
        -
          description: Make sure to insert the LED with the longer LED on the positive voltage!
          pass: info # pass, fail
          exec: null
          image: null
          output: null
    -
      title: Resistors
      image: https://cdn-learn.adafruit.com/assets/assets/000/002/165/medium800/learn_arduino_uno_r3_web.jpg?1396780086
      description: |
        As the name suggests, resistors resist the flow of electricity and the
        higher the value of the resistor, the more it resists and the less
        electrical current will flow through it. We are going to use this to
        control how much electricity flows through the LED and therefore how
        brightly it shines. But first, a bit more about resistors.

        The unit of resistance is called the Ohm, which is usually shortened to
        Ω the Greek letter Omega. Because an Ohm is a low value of resistance
        (it doesn't resist much at all), we also give the values of resistors
        in  kΩ (1000 Ω) and MΩ (1000,000 Ω). These are called kilo-ohms and
        mega-ohms.

        In this lesson, we are going to use four different values of resistor,
        270Ω, 470Ω, 2.2kΩ and 10kΩ. These resistors all look the same, except
        that they have different colored stripes on them. These stripes tell
        you the value of the resistor.
        The resistor color code works like this, for resistors like this with three colored stripes and then a gold stripe at one end.

        Each color has a number, as follows:

        - Black 0
        - Brown 1
        - Red 2
        - Orange 3
        - Yellow 4
        - Green 5
        - Blue 6
        - Purple 7
        - Gray 8
        - White 9

        The first two striped are the first two digits of the value, so red,
        purple means 2, 7. The next stripe is the number of zeros that need to
        come after the first two digits, so if the third stripe is brown, as it
        is in the photograph above, then there will be one zero and so the
        resistor is 270Ω. A resistor with stripes brown, black, orange is 10
        and three zeros so 10,000 Ω in other words 10 kΩ. Unlike LEDs,
        resistors do not have a positive and negative lead. They can be
        connected either way around.
      tests:
        -
          description: What resistance value would a resistor with Red, Black, and Brown bands have?
          image: https://cdn-learn.adafruit.com/assets/assets/000/002/168/medium640/learn_arduino_R-270-level.jpg?1396780106
          pass: info # pass, fail
    -
      title: Breadboard Layout
      image: https://cdn-learn.adafruit.com/assets/assets/000/002/169/medium640/learn_arduino_fritzing.jpg?1396780115
      description: |
        Connect up your stripboard as shown below, using the 270Ω resistor.

        The Arduino is a convenient source of 5 Volts, that we will use to
        provide power to the LED and resistor. You do not need to do anything
        with your Arduino, except plug it into a USB cable.

        With the 270 Ω resistor in place, the LED should be quite bright. If
        you swap out the 270 Ω resistor for the 470 Ω resistor, then the LED
        will appear a little dimmer. With the 2.2kΩ resistor in place the LED
        should be quite faint. Finally, with the 10 kΩ resistor in place, the
        LED will be just about visible. Pull the red jumper lead out of the
        breadboard and touch it into the hole and remove it, so that it acts
        like a switch. You should just be able to notice the difference.

        Turning out the lights might help even more.
      tests:
        -
          description: Is the LED glowing as we would expect?
          image: https://cdn-learn.adafruit.com/assets/assets/000/002/170/medium640/learn_arduino_overview.jpg?1396780130
          pass: info # pass, fail
    -
      title: Moving the Resistor
      image: https://cdn-learn.adafruit.com/assets/assets/000/002/171/medium640/learn_arduino_fritzing_2.jpg?1396780135
      description: |
        At the moment, you have 5V going to one leg of the resistor, the other
        leg of the resistor going to the positive side of the LED and the other
        side of the LED going to GND. However, if we moved the resistor so that
        it came after the LED, as shown below, the LED will still light.

        Note, you will probably want to put the 270Ω resistor back in place.
        So, it does not matter which side of the LED we put the resistor, as
        long as it is there somewhere.
      tests:
        -
          description: Has the LEDs brightness changed at all?
          pass: info # pass, fail
    -
      title: Adding a Button Press
      image: https://cdn-learn.adafruit.com/assets/assets/000/002/171/medium640/learn_arduino_fritzing_2.jpg?1396780135
      description: |
        Insert a button in between the resistor and the positive voltage power line connected to the LED.
      tests:
        -
          description: Does the button press control whether the light is on or not?
          pass: info # pass, fail
    -
      title: Getting Ready to Blink the LED
      image: https://cdn-learn.adafruit.com/assets/assets/000/002/177/medium640/learn_arduino_fritzing_pin_13.jpg?1396780180
      description: |
        With a simple modification of the breadboard, we could attach the LED
        to an output  pin of the Arduino. Move the red jumper wire from the
        Arduino 5V connector to D13, as shown below. Lets try using a different
        pin of the Arduino – say D7. Move the red jumper lead from pin D13 to pin
        D7 and modify the following line near the top of the sketch:
    -
      title: Blinking the LED with Code
      image: https://cdn-learn.adafruit.com/assets/assets/000/002/177/medium640/learn_arduino_fritzing_pin_13.jpg?1396780180
      description: |
        First, set the code to the

        ```
        // initialize the digital pin as an output.
        pinMode(led, OUTPUT);
        ```

        Then, change set the LED to toggle every 1000 ms (1 second).

        ```
        digitalWrite(led, HIGH);   // turn the LED on (HIGH is the voltage level)
        delay(1000);               // wait for a second
        digitalWrite(led, LOW);    // turn the LED off by making the voltage LOW
        delay(1000);               // wait for a second
        ```

      tests:
        -
          description: Do you see the light blinking?
          pass: info # pass, fail








































-
  tutorial:
    title: Gyroscope Fun with NeoPixel Rings
    source: https://create.arduino.cc/projecthub/danionescu/gyroscope-fun-with-neopixel-ring-3a0b84
    image: https://hackster.imgix.net/uploads/attachments/393480/main_rOhiO74qPh.png
    description: In this project, we'll combine a gyroscope and NeoPixels to build a device that lights LEDs corresponding to the angle of inclination.
  progress:
    code: '// Edit me'
  steps:
    -
      title: Introduction
      image: https://hackster.imgix.net/uploads/attachments/393483/2017-12-10_16_29_40_SYvpi0cUi5.jpg
      description: |
        In this tutorial, we'll use the MPU6050 gyroscope, a NeoPixel Ring and an
        Arduino to build a device that lights LEDs corresponding to the angle of
        inclination.

        This is a simple and fun project and it's going to be assembled on a
        breadboard. If you'll follow the steps you'll build what you saw in the
        video. It's a good tutorial for learning about gyroscope and the NeoPixel
        Ring.

        I'm building this tutorial because of the interest i saw on some other
        tutorial of min. In this tutorial i've replaced simple led's with a NeoPixel
        Ring. The ring it's simpler to use through an Adafruit library and it's
        definitely more spectacular.

        So if you have these components lying around this is a great way to make use of
        them, i'll try to take you step by step through building the device and also
        explain how it works in the last step.
    -
      title: Things Required
      image: https://hackster.imgix.net/uploads/attachments/404768/dsc00467_PoC89Gk3vq.jpg
      description: |
        Parts - 1. Arduino Pro Mini 328P, 2. Breadboard, 3. MPU6050 gyroscope, 4. 24
        NeoPixel LED Ring, 5. 4 x AA battery pack with 4 batteries, 6. U-shape
        jumper cables (optional). I've used these jumper cables because they look
        better on the breadboard, and the leds are more visible this way. You can
        find a box of 140 on ebay at about 4$. If you don't have these cables you
        can replace them with dupont wires.

        Tools - 1. USB to serial FTDI adapter FT232RL to programm the arduino pro
        mini, 2. Arduino IDE.

        Skills - 1. Soldering, 2. Basic arduino programming.
    -
      title: Assembly
      image: https://hackster.imgix.net/uploads/attachments/393484/sketch_bb_sZWFCbWVne.png
      description: |
        I've attached the fritzing schematic in fzz format and a picture of it for easy visualization of the connections.
        1. You need to solder 3 male pins on the back of the neopixel ring like shown in the picture
        - solder the positive pin
        - solder the ground
        - solder the data input pin
        2. Then the 4x battery holder should have a way of a connecting to the breadboard, a easy solution is to solder two male dupont wires to it's terminals.
        3. Prepare the breadboard.
        - place the neopixel ring, microcontroller and gyroscope on the breadboard like in the image
        - place all the negative wires: to the microcontroller, neopixel ring, gyro
        - place all the positive wires: to the microcontroller, neopixel ring, gyro
        - place all the data wires:
        * SDA and SCL from the to the microcontroller to the gyro
        * pin D6 from the microcontroller to the neopixel ring
        - double check all connections before powering
        - optionally using duct tape, tape the battery pack on the back of the bradboard to hold it in place and make it more portable
    -
      title: The Code and the Calibration
      image: https://hackster.imgix.net/uploads/attachments/393480/main_rOhiO74qPh.png
      description: |
        Upload the code: Using the FTDI adapter upload the code to the arduino.

        Connect the power supply (batteries)

        For calibration: The most important thing to calibrate here is "LED_OFFSET" constant. In my
        example is 12. You need to adjust this from 0 to 23 so that after powering
        the board the led will light in the direction you tilt the board.




































-
  tutorial:
    title: How to Use Potentiometer - Arduino Tutorial
    source: https://www.instructables.com/id/How-to-use-Potentiometer-Arduino-Tutorial
    image: https://cdn.instructables.com/FP6/LC66/IA8WFQCA/FP6LC66IA8WFQCA.LARGE.jpg
    description: |
      For those beginning to learn about robotics, particularly in the area of
      building circuits, you may have come across the question of how to change the
      brightness of a LED, without having to keep switching parts. Quite simply,
      the solution to this issue is a potentiometer.
  progress:
    code: '// Edit me'
  steps:
    -
      title: Introduction
      image: https://hackster.imgix.net/uploads/attachments/393483/2017-12-10_16_29_40_SYvpi0cUi5.jpg
      description: description
